{"version":3,"sources":["config/index.js","substrate-lib/SubstrateContext.js","substrate-lib/components/DeveloperConsole.js","AccountSelector.js","BlockNumber.js","Metadata.js","NodeInfo.js","hooks/useBlockNumber.js","BlockInformation.js","SearchBlock.js","App.js","index.js"],"names":["configEnv","require","envVars","reduce","mem","n","undefined","process","slice","config","configCommon","connectedSocket","queryString","parse","window","location","search","rpc","PROVIDER_SOCKET","console","log","INIT_STATE","socket","jsonrpc","RPC","types","CUSTOM_TYPES","keyring","keyringState","api","apiError","apiState","reducer","state","action","type","payload","Error","loadAccts","SubstrateContext","React","createContext","SubstrateContextProvider","props","initState","forEach","key","useReducer","dispatch","provider","WsProvider","_api","ApiPromise","on","isReady","then","err","connect","asyncLoadAccounts","a","web3Enable","APP_NAME","web3Accounts","allAccounts","map","address","meta","name","source","loadAll","isDevelopment","DEVELOPMENT_KEYRING","error","loadAccounts","Provider","value","children","useSubstrate","useContext","DeveloperConsole","util","utilCrypto","Main","setAccountAddress","useState","accountSelected","setAccountSelected","keyringOptions","getPairs","account","text","toUpperCase","icon","initialAddress","length","useEffect","Menu","attached","tabular","style","backgroundColor","borderColor","paddingTop","paddingBottom","Container","Image","src","size","position","alignItems","target","rel","href","Button","basic","circular","color","Dropdown","selection","clearable","placeholder","options","onChange","_","dropdown","BalanceAnnotation","accountBalance","setAccountBalance","unsubscribe","query","system","balance","data","free","toHuman","unsub","catch","Label","pointing","Icon","AccountSelector","finalized","blockNumber","setBlockNumber","blockNumberTimer","setBlockNumberTimer","bestNumber","derive","chain","bestNumberFinalized","unsubscribeAll","number","toNumber","timer","time","id","setInterval","clearInterval","Grid","Column","Card","Content","textAlign","Statistic","label","extra","BlockNumber","version","metadata","setMetadata","getMetadata","Header","Meta","Modal","trigger","scrolling","Description","JSON","stringify","Metadata","nodeInfo","setNodeInfo","Promise","all","nodeName","nodeVersion","getInfo","NodeInfo","useBlockNumber","setTime","BlockInformation","header","setHeader","useBlocknumber","getBlock","response","er","Table","celled","striped","Row","HeaderCell","Body","Cell","width","display","minWidth","toString","Dimmer","active","inverted","Loader","inline","SearchBlock","setQuery","Input","link","e","iconPosition","loader","centered","columns","padded","Message","negative","compact","floating","content","contextRef","createRef","ref","Sticky","context","stackable","stretched","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.dda930bc.chunk.js","sourcesContent":["import configCommon from './common.json';\r\n// Using `require` as `import` does not support dynamic loading (yet).\r\nconst configEnv = require(`./${process.env.NODE_ENV}.json`);\r\n\r\n// Accepting React env vars and aggregating them into `config` object.\r\nconst envVarNames = [\r\n  'REACT_APP_PROVIDER_SOCKET',\r\n  'REACT_APP_DEVELOPMENT_KEYRING'\r\n];\r\nconst envVars = envVarNames.reduce((mem, n) => {\r\n  // Remove the `REACT_APP_` prefix\r\n  if (process.env[n] !== undefined) mem[n.slice(10)] = process.env[n];\r\n  return mem;\r\n}, {});\r\n\r\nconst config = { ...configCommon, ...configEnv, ...envVars };\r\nexport default config;\r\n","import React, { useReducer, useContext } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport jsonrpc from '@polkadot/types/interfaces/jsonrpc';\r\nimport queryString from 'query-string';\r\n\r\nimport { ApiPromise, WsProvider } from '@polkadot/api';\r\nimport { web3Accounts, web3Enable } from '@polkadot/extension-dapp';\r\nimport keyring from '@polkadot/ui-keyring';\r\n\r\nimport config from '../config';\r\n\r\nconst parsedQuery = queryString.parse(window.location.search);\r\nconst connectedSocket = parsedQuery.rpc || config.PROVIDER_SOCKET;\r\nconsole.log(`Connected socket: ${connectedSocket}`);\r\n\r\n///\r\n// Initial state for `useReducer`\r\n\r\nconst INIT_STATE = {\r\n  socket: connectedSocket,\r\n  jsonrpc: { ...jsonrpc, ...config.RPC },\r\n  types: config.CUSTOM_TYPES,\r\n  keyring: null,\r\n  keyringState: null,\r\n  api: null,\r\n  apiError: null,\r\n  apiState: null\r\n};\r\n\r\n///\r\n// Reducer function for `useReducer`\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'CONNECT_INIT':\r\n      return { ...state, apiState: 'CONNECT_INIT' };\r\n\r\n    case 'CONNECT':\r\n      return { ...state, api: action.payload, apiState: 'CONNECTING' };\r\n\r\n    case 'CONNECT_SUCCESS':\r\n      return { ...state, apiState: 'READY' };\r\n\r\n    case 'CONNECT_ERROR':\r\n      return { ...state, apiState: 'ERROR', apiError: action.payload };\r\n\r\n    case 'LOAD_KEYRING':\r\n      return { ...state, keyringState: 'LOADING' };\r\n\r\n    case 'SET_KEYRING':\r\n      return { ...state, keyring: action.payload, keyringState: 'READY' };\r\n\r\n    case 'KEYRING_ERROR':\r\n      return { ...state, keyring: null, keyringState: 'ERROR' };\r\n\r\n    default:\r\n      throw new Error(`Unknown type: ${action.type}`);\r\n  }\r\n};\r\n\r\n///\r\n// Connecting to the Substrate node\r\n\r\nconst connect = (state, dispatch) => {\r\n  const { apiState, socket, jsonrpc, types } = state;\r\n  // We only want this function to be performed once\r\n  if (apiState) return;\r\n\r\n  dispatch({ type: 'CONNECT_INIT' });\r\n\r\n  const provider = new WsProvider(socket);\r\n  const _api = new ApiPromise({ provider, types, rpc: jsonrpc });\r\n\r\n  // Set listeners for disconnection and reconnection event.\r\n  _api.on('connected', () => {\r\n    dispatch({ type: 'CONNECT', payload: _api });\r\n    // `ready` event is not emitted upon reconnection and is checked explicitly here.\r\n    _api.isReady.then((_api) => dispatch({ type: 'CONNECT_SUCCESS' }));\r\n  });\r\n  _api.on('ready', () => dispatch({ type: 'CONNECT_SUCCESS' }));\r\n  _api.on('error', err => dispatch({ type: 'CONNECT_ERROR', payload: err }));\r\n};\r\n\r\n///\r\n// Loading accounts from dev and polkadot-js extension\r\n\r\nlet loadAccts = false;\r\nconst loadAccounts = (state, dispatch) => {\r\n  const asyncLoadAccounts = async () => {\r\n    dispatch({ type: 'LOAD_KEYRING' });\r\n    try {\r\n      await web3Enable(config.APP_NAME);\r\n      let allAccounts = await web3Accounts();\r\n      allAccounts = allAccounts.map(({ address, meta }) =>\r\n        ({ address, meta: { ...meta, name: `${meta.name} (${meta.source})` } }));\r\n      keyring.loadAll({ isDevelopment: config.DEVELOPMENT_KEYRING }, allAccounts);\r\n      dispatch({ type: 'SET_KEYRING', payload: keyring });\r\n    } catch (e) {\r\n      console.error(e);\r\n      dispatch({ type: 'KEYRING_ERROR' });\r\n    }\r\n  };\r\n\r\n  const { keyringState } = state;\r\n  // If `keyringState` is not null `asyncLoadAccounts` is running.\r\n  if (keyringState) return;\r\n  // If `loadAccts` is true, the `asyncLoadAccounts` has been run once.\r\n  if (loadAccts) return dispatch({ type: 'SET_KEYRING', payload: keyring });\r\n\r\n  // This is the heavy duty work\r\n  loadAccts = true;\r\n  asyncLoadAccounts();\r\n};\r\n\r\nconst SubstrateContext = React.createContext();\r\n\r\nconst SubstrateContextProvider = (props) => {\r\n  // filtering props and merge with default param value\r\n  const initState = { ...INIT_STATE };\r\n  const neededPropNames = ['socket', 'types'];\r\n  neededPropNames.forEach(key => {\r\n    initState[key] = (typeof props[key] === 'undefined' ? initState[key] : props[key]);\r\n  });\r\n\r\n  const [state, dispatch] = useReducer(reducer, initState);\r\n  connect(state, dispatch);\r\n  loadAccounts(state, dispatch);\r\n\r\n  return <SubstrateContext.Provider value={state}>\r\n    {props.children}\r\n  </SubstrateContext.Provider>;\r\n};\r\n\r\n// prop typechecking\r\nSubstrateContextProvider.propTypes = {\r\n  socket: PropTypes.string,\r\n  types: PropTypes.object\r\n};\r\n\r\nconst useSubstrate = () => ({ ...useContext(SubstrateContext) });\r\n\r\nexport { SubstrateContextProvider, useSubstrate };\r\n","// This component will simply add utility functions to your developer console.\r\nimport { useSubstrate } from '../';\r\n\r\nexport default function DeveloperConsole (props) {\r\n  const { api, apiState, keyring, keyringState } = useSubstrate();\r\n  if (apiState === 'READY') { window.api = api; }\r\n  if (keyringState === 'READY') { window.keyring = keyring; }\r\n  window.util = require('@polkadot/util');\r\n  window.utilCrypto = require('@polkadot/util-crypto');\r\n\r\n  return null;\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\r\n\r\nimport {\r\n  Menu,\r\n  Button,\r\n  Dropdown,\r\n  Container,\r\n  Icon,\r\n  Image,\r\n  Label\r\n} from 'semantic-ui-react';\r\n\r\nimport { useSubstrate } from './substrate-lib';\r\n\r\nfunction Main (props) {\r\n  const { keyring } = useSubstrate();\r\n  const { setAccountAddress } = props;\r\n  const [accountSelected, setAccountSelected] = useState('');\r\n\r\n  // Get the list of accounts we possess the private key for\r\n  const keyringOptions = keyring.getPairs().map(account => ({\r\n    key: account.address,\r\n    value: account.address,\r\n    text: account.meta.name.toUpperCase(),\r\n    icon: 'user'\r\n  }));\r\n\r\n  const initialAddress =\r\n    keyringOptions.length > 0 ? keyringOptions[0].value : '';\r\n\r\n  // Set the initial address\r\n  useEffect(() => {\r\n    setAccountAddress(initialAddress);\r\n    setAccountSelected(initialAddress);\r\n  }, [setAccountAddress, initialAddress]);\r\n\r\n  const onChange = address => {\r\n    // Update state with new account address\r\n    setAccountAddress(address);\r\n    setAccountSelected(address);\r\n  };\r\n\r\n  return (\r\n    <Menu\r\n      attached='top'\r\n      tabular\r\n      style={{\r\n        backgroundColor: '#fff',\r\n        borderColor: '#fff',\r\n        paddingTop: '1em',\r\n        paddingBottom: '1em'\r\n      }}\r\n    >\r\n      <Container>\r\n        <Menu.Menu>\r\n          <Image src={`${process.env.PUBLIC_URL}/assets/substrate-logo.png`} size='mini' />\r\n        </Menu.Menu>\r\n        <Menu.Menu position='right' style={{ alignItems: 'center' }}>\r\n          { !accountSelected\r\n            ? <span>\r\n              Add your account with the{' '}\r\n              <a\r\n                target='_blank'\r\n                rel='noopener noreferrer'\r\n                href='https://github.com/polkadot-js/extension'\r\n              >\r\n                Polkadot JS Extension\r\n              </a>\r\n            </span>\r\n            : null }\r\n          <CopyToClipboard text={accountSelected}>\r\n            <Button\r\n              basic\r\n              circular\r\n              size='large'\r\n              icon='user'\r\n              color={accountSelected ? 'green' : 'red'}\r\n            />\r\n          </CopyToClipboard>\r\n          <Dropdown\r\n            search\r\n            selection\r\n            clearable\r\n            placeholder='Select an account'\r\n            options={keyringOptions}\r\n            onChange={(_, dropdown) => {\r\n              onChange(dropdown.value);\r\n            }}\r\n            value={accountSelected}\r\n          />\r\n          <BalanceAnnotation accountSelected={accountSelected} />\r\n        </Menu.Menu>\r\n      </Container>\r\n    </Menu>\r\n  );\r\n}\r\n\r\nfunction BalanceAnnotation (props) {\r\n  const { accountSelected } = props;\r\n  const { api } = useSubstrate();\r\n  const [accountBalance, setAccountBalance] = useState(0);\r\n\r\n  // When account address changes, update subscriptions\r\n  useEffect(() => {\r\n    let unsubscribe;\r\n\r\n    // If the user has selected an address, create a new subscription\r\n    accountSelected &&\r\n      api.query.system.account(accountSelected, balance => {\r\n        setAccountBalance(balance.data.free.toHuman());\r\n      })\r\n        .then(unsub => {\r\n          unsubscribe = unsub;\r\n        })\r\n        .catch(console.error);\r\n\r\n    return () => unsubscribe && unsubscribe();\r\n  }, [api, accountSelected]);\r\n\r\n  return accountSelected ? (\r\n    <Label pointing='left'>\r\n      <Icon name='money' color='green' />\r\n      {accountBalance}\r\n    </Label>\r\n  ) : null;\r\n}\r\n\r\nexport default function AccountSelector (props) {\r\n  const { api, keyring } = useSubstrate();\r\n  return keyring.getPairs && api.query ? <Main {...props} /> : null;\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Statistic, Grid, Card, Icon } from 'semantic-ui-react';\r\n\r\nimport { useSubstrate } from './substrate-lib';\r\n\r\nfunction Main (props) {\r\n  const { api } = useSubstrate();\r\n  const { finalized } = props;\r\n  const [blockNumber, setBlockNumber] = useState(0);\r\n  const [blockNumberTimer, setBlockNumberTimer] = useState(0);\r\n\r\n  const bestNumber = finalized\r\n    ? api.derive.chain.bestNumberFinalized\r\n    : api.derive.chain.bestNumber;\r\n\r\n  useEffect(() => {\r\n    let unsubscribeAll = null;\r\n\r\n    bestNumber(number => {\r\n      setBlockNumber(number.toNumber());\r\n      setBlockNumberTimer(0);\r\n    })\r\n      .then(unsub => {\r\n        unsubscribeAll = unsub;\r\n      })\r\n      .catch(console.error);\r\n\r\n    return () => unsubscribeAll && unsubscribeAll();\r\n  }, [bestNumber]);\r\n\r\n  const timer = () => {\r\n    setBlockNumberTimer(time => time + 1);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const id = setInterval(timer, 1000);\r\n    return () => clearInterval(id);\r\n  }, []);\r\n\r\n  return (\r\n    <Grid.Column>\r\n      <Card>\r\n        <Card.Content textAlign='center'>\r\n          <Statistic\r\n            label={(finalized ? 'Finalized' : 'Current') + ' Block'}\r\n            value={blockNumber}\r\n          />\r\n        </Card.Content>\r\n        <Card.Content extra>\r\n          <Icon name='time' /> {blockNumberTimer}\r\n        </Card.Content>\r\n      </Card>\r\n    </Grid.Column>\r\n  );\r\n}\r\n\r\nexport default function BlockNumber (props) {\r\n  const { api } = useSubstrate();\r\n  return api.derive &&\r\n    api.derive.chain &&\r\n    api.derive.chain.bestNumber &&\r\n    api.derive.chain.bestNumberFinalized ? (\r\n      <Main {...props} />\r\n    ) : null;\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Grid, Modal, Button, Card } from 'semantic-ui-react';\r\n\r\nimport { useSubstrate } from './substrate-lib';\r\n\r\nfunction Main (props) {\r\n  const { api } = useSubstrate();\r\n  const [metadata, setMetadata] = useState({ data: null, version: null });\r\n\r\n  useEffect(() => {\r\n    const getMetadata = async () => {\r\n      try {\r\n        const data = await api.rpc.state.getMetadata();\r\n        setMetadata({ data, version: data.version });\r\n      } catch (e) {\r\n        console.error(e);\r\n      }\r\n    };\r\n    getMetadata();\r\n  }, [api.rpc.state]);\r\n\r\n  return (\r\n    <Grid.Column>\r\n      <Card>\r\n        <Card.Content>\r\n          <Card.Header>Metadata</Card.Header>\r\n          <Card.Meta>\r\n            <span>v{metadata.version}</span>\r\n          </Card.Meta>\r\n        </Card.Content>\r\n        <Card.Content extra>\r\n          <Modal trigger={<Button>Show Metadata</Button>}>\r\n            <Modal.Header>Runtime Metadata</Modal.Header>\r\n            <Modal.Content scrolling>\r\n              <Modal.Description>\r\n                <pre>\r\n                  <code>{JSON.stringify(metadata.data, null, 2)}</code>\r\n                </pre>\r\n              </Modal.Description>\r\n            </Modal.Content>\r\n          </Modal>\r\n        </Card.Content>\r\n      </Card>\r\n    </Grid.Column>\r\n  );\r\n}\r\n\r\nexport default function Metadata (props) {\r\n  const { api } = useSubstrate();\r\n  return api.rpc && api.rpc.state && api.rpc.state.getMetadata ? (\r\n    <Main {...props} />\r\n  ) : null;\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Card, Icon, Grid } from 'semantic-ui-react';\r\n\r\nimport { useSubstrate } from './substrate-lib';\r\n\r\nfunction Main (props) {\r\n  const { api } = useSubstrate();\r\n  const [nodeInfo, setNodeInfo] = useState({});\r\n\r\n  useEffect(() => {\r\n    const getInfo = async () => {\r\n      try {\r\n        const [chain, nodeName, nodeVersion] = await Promise.all([\r\n          api.rpc.system.chain(),\r\n          api.rpc.system.name(),\r\n          api.rpc.system.version()\r\n        ]);\r\n        setNodeInfo({ chain, nodeName, nodeVersion });\r\n      } catch (e) {\r\n        console.error(e);\r\n      }\r\n    };\r\n    getInfo();\r\n  }, [api.rpc.system]);\r\n\r\n  return (\r\n    <Grid.Column>\r\n      <Card>\r\n        <Card.Content>\r\n          <Card.Header>{nodeInfo.nodeName}</Card.Header>\r\n          <Card.Meta>\r\n            <span>{nodeInfo.chain}</span>\r\n          </Card.Meta>\r\n          <Card.Description>\r\n            Built using the{' '}\r\n            <a href='https://github.com/substrate-developer-hub/substrate-front-end-template'>\r\n              Substrate Front End Template\r\n            </a>\r\n          </Card.Description>\r\n        </Card.Content>\r\n        <Card.Content extra>\r\n          <Icon name='setting' />v{nodeInfo.nodeVersion}\r\n        </Card.Content>\r\n      </Card>\r\n    </Grid.Column>\r\n  );\r\n}\r\n\r\nexport default function NodeInfo (props) {\r\n  const { api } = useSubstrate();\r\n  return api.rpc &&\r\n    api.rpc.system &&\r\n    api.rpc.system.chain &&\r\n    api.rpc.system.name &&\r\n    api.rpc.system.version ? (\r\n      <Main {...props} />\r\n    ) : null;\r\n}\r\n","import { useState, useEffect } from 'react';\r\nimport { useSubstrate } from '../substrate-lib';\r\n\r\nconst useBlockNumber = () => {\r\n    const [time, setTime] = useState(0);\r\n    const [blockNumber, setBlockNumber] = useState(undefined);\r\n    const { api, apiState } = useSubstrate();\r\n\r\n    useEffect(() => {\r\n        if (apiState != 'READY') { return; }\r\n        const { bestNumber } = api && api.derive && api.derive.chain;\r\n        bestNumber && bestNumber(number => {\r\n            setBlockNumber(number.toNumber());\r\n            setTime(0);\r\n        }).catch(console.error);\r\n    }, [time, setBlockNumber]);\r\n\r\n    const timer = () => setTime(time => time + 1);\r\n    useEffect(() => {\r\n        const id = setInterval(timer, 1000);\r\n\r\n        return () => clearInterval(id);\r\n    }, [setTime]);\r\n\r\n    return [blockNumber]\r\n\r\n};\r\n\r\nexport default useBlockNumber;","import React, { useEffect, useState } from 'react';\r\nimport { Table, Grid, Loader, Dimmer } from 'semantic-ui-react';\r\nimport { useSubstrate } from './substrate-lib';\r\nimport useBlocknumber from './hooks/useBlockNumber';\r\n\r\nexport default function BlockInformation() {\r\n  const [header, setHeader] = useState(undefined);\r\n  const { api } = useSubstrate();\r\n  const [blockNumber] = useBlocknumber();\r\n\r\n  useEffect(() => {\r\n    if (!blockNumber) { return; }\r\n\r\n    api.rpc.chain.getBlock()\r\n      .then(response => {\r\n        setHeader(response['block']['header']);\r\n      })\r\n      .catch((er) => { console.log(er); });\r\n  }, [api, blockNumber, setHeader]);\r\n\r\n  if (header == null || !blockNumber) {\r\n    return (\r\n      <Grid.Column>\r\n        <Dimmer active inverted>\r\n          <Loader size='medium' active inverted inline='centered'>Loading information...</Loader>\r\n        </Dimmer>\r\n      </Grid.Column>);\r\n  }\r\n\r\n  return (\r\n    <Grid.Column>\r\n      <h1>Block information</h1>\r\n      <Table celled striped size='small' color='violet' key='violet'>\r\n        <Table.Header>\r\n          <Table.Row>\r\n            <Table.HeaderCell>\r\n              Header\r\n            </Table.HeaderCell>\r\n            <Table.HeaderCell>\r\n              Information\r\n            </Table.HeaderCell>\r\n          </Table.Row>\r\n        </Table.Header>\r\n        <Table.Body>\r\n          <Table.Row>\r\n            <Table.Cell width={3} textAlign='right'>Block number</Table.Cell>\r\n            <Table.Cell width={10}>\r\n              <span style={{ display: 'inline-block', minWidth: '31em' }}>\r\n                {header['number'].toNumber()}\r\n              </span>\r\n            </Table.Cell>\r\n          </Table.Row>\r\n          <Table.Row>\r\n            <Table.Cell width={3} textAlign='right'>Hash</Table.Cell>\r\n            <Table.Cell width={13}>\r\n              <span style={{ display: 'inline-block', minWidth: '31em' }}>\r\n                {header && header['hash'].toString()}\r\n              </span>\r\n            </Table.Cell>\r\n          </Table.Row>\r\n          <Table.Row>\r\n            <Table.Cell width={3} textAlign='right'>State root</Table.Cell>\r\n            <Table.Cell width={13}>\r\n              <span style={{ display: 'inline-block', minWidth: '31em' }}>\r\n                {header['stateRoot'].toString()}\r\n              </span>\r\n            </Table.Cell>\r\n          </Table.Row>\r\n          <Table.Row>\r\n            <Table.Cell width={3} textAlign='right'>Parent root</Table.Cell>\r\n            <Table.Cell width={13}>\r\n              <span style={{ display: 'inline-block', minWidth: '31em' }}>\r\n                {header['parentHash'].toString()}\r\n              </span>\r\n            </Table.Cell>\r\n          </Table.Row>\r\n          <Table.Row>\r\n            <Table.Cell width={3} textAlign='right'>Extrinsics root</Table.Cell>\r\n            <Table.Cell width={13}>\r\n              <span style={{ display: 'inline-block', minWidth: '31em' }}>\r\n                {header['extrinsicsRoot'].toString()}\r\n              </span>\r\n            </Table.Cell>\r\n          </Table.Row>\r\n        </Table.Body>\r\n      </Table>\r\n    </Grid.Column>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Table, Grid, Input, Icon } from 'semantic-ui-react';\r\nimport { useSubstrate } from './substrate-lib';\r\n\r\n\r\nexport default function SearchBlock() {\r\n  const [query, setQuery] = useState('');\r\n\r\n  const [header, setHeader] = useState(undefined);\r\n  const { api } = useSubstrate();\r\n\r\n  useEffect(() => {\r\n    if (query == null) { return; }\r\n\r\n    api.rpc.chain.getBlock(query)\r\n      .then(response => {\r\n\r\n        setHeader(response['block']['header']);\r\n\r\n      })\r\n      .catch((er) => { console.log(er); });\r\n  }, [api, query, setHeader]);\r\n\r\n\r\n  return (\r\n    <Grid.Column>\r\n      <div>\r\n        <h1>Search block</h1>\r\n        <Input icon={<Icon name='search' inverted circular link />} value={query} onChange={(e) => setQuery(e.target.value)} iconPosition='left' placeholder='Search...' />\r\n      </div>\r\n      {header && <Table celled striped size='small' color='orange' key='orange'>\r\n        <Table.Header>\r\n          <Table.Row>\r\n            <Table.HeaderCell>\r\n              Header\r\n            </Table.HeaderCell>\r\n            <Table.HeaderCell>\r\n              Information\r\n            </Table.HeaderCell>\r\n          </Table.Row>\r\n        </Table.Header>\r\n        <Table.Body>\r\n          <Table.Row>\r\n            <Table.Cell width={3} textAlign='right'>Block number</Table.Cell>\r\n            <Table.Cell width={10}>\r\n              <span style={{ display: 'inline-block', minWidth: '31em' }}>\r\n                {header['number'].toNumber()}\r\n              </span>\r\n            </Table.Cell>\r\n          </Table.Row>\r\n          <Table.Row>\r\n            <Table.Cell width={3} textAlign='right'>Hash</Table.Cell>\r\n            <Table.Cell width={13}>\r\n              <span style={{ display: 'inline-block', minWidth: '31em' }}>\r\n                {header['hash'].toString()}\r\n              </span>\r\n            </Table.Cell>\r\n          </Table.Row>\r\n          <Table.Row>\r\n            <Table.Cell width={3} textAlign='right'>State root</Table.Cell>\r\n            <Table.Cell width={13}>\r\n              <span style={{ display: 'inline-block', minWidth: '31em' }}>\r\n                {header['stateRoot'].toString()}\r\n              </span>\r\n            </Table.Cell>\r\n          </Table.Row>\r\n          <Table.Row>\r\n            <Table.Cell width={3} textAlign='right'>Parent root</Table.Cell>\r\n            <Table.Cell width={13}>\r\n              <span style={{ display: 'inline-block', minWidth: '31em' }}>\r\n                {header['parentHash'].toString()}\r\n              </span>\r\n            </Table.Cell>\r\n          </Table.Row>\r\n          <Table.Row>\r\n            <Table.Cell width={3} textAlign='right'>Extrinsics root</Table.Cell>\r\n            <Table.Cell width={13}>\r\n              <span style={{ display: 'inline-block', minWidth: '31em' }}>\r\n                {header['extrinsicsRoot'].toString()}\r\n              </span>\r\n            </Table.Cell>\r\n          </Table.Row>\r\n        </Table.Body>\r\n      </Table>}\r\n    </Grid.Column>\r\n  );\r\n}\r\n","import React, { useState, createRef } from 'react';\r\nimport { Container, Dimmer, Loader, Grid, Sticky, Message } from 'semantic-ui-react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\n\r\nimport { SubstrateContextProvider, useSubstrate } from './substrate-lib';\r\nimport { DeveloperConsole } from './substrate-lib/components';\r\n\r\nimport AccountSelector from './AccountSelector';\r\nimport BlockNumber from './BlockNumber';;\r\nimport Metadata from './Metadata';\r\nimport NodeInfo from './NodeInfo';\r\nimport BlockInformation from './BlockInformation';\r\nimport SearchBlock from './SearchBlock';\r\n\r\n\r\nfunction Main() {\r\n  const { apiState, keyringState, apiError } = useSubstrate();\r\n  const [accountAddress, setAccountAddress] = useState(null);\r\n  \r\n  const loader = text =>\r\n    <Dimmer active>\r\n      <Loader size='small'>{text}</Loader>\r\n    </Dimmer>;\r\n\r\n  const message = err =>\r\n    <Grid centered columns={2} padded>\r\n      <Grid.Column>\r\n        <Message negative compact floating\r\n          header='Error Connecting to Substrate'\r\n          content={`${err}`}\r\n        />\r\n      </Grid.Column>\r\n    </Grid>;\r\n\r\n  if (apiState === 'ERROR') return message(apiError);\r\n  else if (apiState !== 'READY') return loader('Connecting to Substrate');\r\n\r\n  if (keyringState !== 'READY') {\r\n    return loader('Loading accounts (please review any extension\\'s authorization)');\r\n  }\r\n\r\n  const contextRef = createRef();\r\n\r\n  return (\r\n    <div ref={contextRef}>\r\n      <Sticky context={contextRef}>\r\n        <AccountSelector setAccountAddress={setAccountAddress} />\r\n      </Sticky>\r\n      <Container>\r\n        <Grid stackable columns='equal'>\r\n          <Grid.Row stretched>\r\n            <NodeInfo />\r\n            <Metadata />\r\n            <BlockNumber />\r\n            <BlockNumber finalized />\r\n          </Grid.Row>\r\n          <Grid.Row stretched>\r\n            <BlockInformation />\r\n          </Grid.Row>\r\n          <Grid.Row stretched>\r\n            <SearchBlock />\r\n          </Grid.Row>\r\n        </Grid>\r\n      </Container>\r\n      <DeveloperConsole />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default function App() {\r\n  return (\r\n    <SubstrateContextProvider>\r\n      <Main />\r\n    </SubstrateContextProvider>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}